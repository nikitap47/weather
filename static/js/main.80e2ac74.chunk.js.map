{"version":3,"sources":["components/NewInput.module.css","components/NewInput.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","NewInput","useState","city","setCity","apiError","setApiError","weather","setWeather","temp","setTemp","lat","setLat","long","setLong","wind","setWind","weatherReportHandler","evt","a","preventDefault","fetch","response","json","responseData","error","current","condition","text","temp_c","location","lon","wind_kph","console","log","Container","className","classes","bdy","Form","onSubmit","Group","Control","type","size","onChange","target","value","required","Button","variant","Alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,IAAM,sBAAsB,KAAO,uBAAuB,QAAU,4B,sNCsEvEC,EAnEE,WAEb,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwBN,mBAAS,IAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAAsBR,mBAAS,IAA/B,mBAAOS,EAAP,KAAYC,EAAZ,KACA,EAAwBV,mBAAS,IAAjC,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAAwBZ,mBAAS,IAAjC,mBAAOa,EAAP,KAAaC,EAAb,KAMMC,EAAoB,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,yDACzBD,EAAIE,iBACQ,KAATjB,EAFsB,iCAGEkB,MAAM,qFAAD,OAAsFlB,EAAtF,+BAHP,cAGfmB,EAHe,SAMjBhB,GAAY,GANK,SASMgB,EAASC,OATf,QASfC,EATe,QAWLC,MACZnB,GAAY,IAEZE,EAAWgB,EAAaE,QAAQC,UAAUC,MAC1ClB,EAAQc,EAAaE,QAAQG,QAC7BjB,EAAOY,EAAaM,SAASnB,KAC7BG,EAAQU,EAAaM,SAASC,KAC9Bf,EAAQQ,EAAaE,QAAQM,UAC7BC,QAAQC,IAAIV,IAnBK,QAwBzBpB,EAAQ,IAxBiB,4CAAH,sDA4B1B,OACI,eAAC+B,EAAA,EAAD,CAAWC,UAAWC,IAAQC,IAA9B,UACI,oBAAIF,UAAU,iBAAd,8BACA,mBAAGA,UAAU,OAAb,qCACA,eAACG,EAAA,EAAD,CAAMC,SAAUvB,EAAhB,UACI,cAACsB,EAAA,EAAKE,MAAN,CAAYL,UAAU,OAAtB,SACI,cAACG,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,KAAK,KAAKR,UAAWC,IAAQlC,KAAM0C,SAtCzD,SAAA3B,GAChBd,EAAQc,EAAI4B,OAAOC,QAqC6EA,MAAO5C,EAAM6C,UAAQ,MAE7G,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUP,KAAK,SAA/B,uBAIHtC,EAAW,cAAC8C,EAAA,EAAD,CAAOD,QAAQ,SAASd,UAAWC,IAAQ9B,QAA3C,2CAA4F,KACvGA,GAAWE,EACR,eAAC0C,EAAA,EAAD,CAAOD,QAAQ,UAAUd,UAAWC,IAAQ9B,QAA5C,qCAC6BA,EAD7B,wBAC2DE,EAD3D,4BAEqBE,EAFrB,0BAEkDE,EAFlD,kCAEwFE,EAFxF,YAIE,S,MClDHqC,MAXf,WAEE,OACE,qBAAKhB,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCGOiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.80e2ac74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bdy\":\"NewInput_bdy__2XOXs\",\"city\":\"NewInput_city__RiJiU\",\"weather\":\"NewInput_weather__1tFra\"};","import { Container , Form, Button, Alert} from 'react-bootstrap';\r\nimport classes from './NewInput.module.css';\r\nimport { useState } from 'react';\r\n\r\nconst NewInput = () => {\r\n\r\n    const [city, setCity] = useState('');\r\n    const [apiError, setApiError] = useState(false);\r\n\r\n    const [weather, setWeather] = useState('');\r\n    const [temp, setTemp] = useState('');\r\n    const [lat, setLat] = useState('');\r\n    const [long, setLong] = useState('');    \r\n    const [wind, setWind] = useState('');\r\n\r\n    const cityHandler = evt => {\r\n        setCity(evt.target.value);\r\n    }\r\n\r\n    const weatherReportHandler = async(evt) => {\r\n        evt.preventDefault();\r\n        if(city !== ''){\r\n            const response = await fetch(`https://api.weatherapi.com/v1/forecast.json?key=ba5012742b0d4afbb3e191218212209&q=${city}&days=1&aqi=yes&alerts=yes`);\r\n            \r\n            if(!response){\r\n                setApiError(true);\r\n            }\r\n            \r\n            const responseData = await response.json();\r\n\r\n            if(responseData.error){\r\n                setApiError(true);\r\n            }else{\r\n                setWeather(responseData.current.condition.text);\r\n                setTemp(responseData.current.temp_c);\r\n                setLat(responseData.location.lat);\r\n                setLong(responseData.location.lon);\r\n                setWind(responseData.current.wind_kph);\r\n                console.log(responseData);\r\n            }\r\n            \r\n\r\n        }\r\n        setCity('');\r\n        \r\n    }\r\n\r\n    return(\r\n        <Container className={classes.bdy}>\r\n            <h1 className=\"display-4 bold\">Weather Forecast</h1>\r\n            <p className=\"lead\">Please enter city name.</p>\r\n            <Form onSubmit={weatherReportHandler}>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Control type=\"text\" size='lg' className={classes.city} onChange={cityHandler} value={city} required />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n            {apiError ? <Alert variant='danger' className={classes.weather}>Please enter valid city name.</Alert> : null}\r\n            {weather && temp ? \r\n                <Alert variant=\"success\" className={classes.weather}>\r\n                    Today it is going to be {weather}. The temperature is {temp} &#8451;. \r\n                    The latitude is {lat} &deg; and longitude is {long} &deg;. The wind speed would be {wind} km/h.\r\n                </Alert>\r\n                : null\r\n            }\r\n      </Container>\r\n    )\r\n};\r\n\r\nexport default NewInput;","import React  from 'react';\nimport NewInput from './components/NewInput';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" >\n        <NewInput  />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}